// Mocks generated by Mockito 5.4.4 from annotations
// in fluffychat/test/pages/chat/chat_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i12;

import 'package:desktop_drop/desktop_drop.dart' as _i10;
import 'package:emoji_picker_flutter/emoji_picker_flutter.dart' as _i11;
import 'package:fluffychat/pages/chat/chat.dart' as _i5;
import 'package:fluffychat/widgets/matrix.dart' as _i7;
import 'package:flutter/foundation.dart' as _i6;
import 'package:flutter/material.dart' as _i4;
import 'package:flutter/services.dart' as _i13;
import 'package:matrix/matrix.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:scroll_to_index/scroll_to_index.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAutoScrollController_1 extends _i1.SmartFake
    implements _i3.AutoScrollController {
  _FakeAutoScrollController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_2 extends _i1.SmartFake implements _i4.FocusNode {
  _FakeFocusNode_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTextEditingController_3 extends _i1.SmartFake
    implements _i4.TextEditingController {
  _FakeTextEditingController_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRoom_4 extends _i1.SmartFake implements _i2.Room {
  _FakeRoom_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChatPageWithRoom_5 extends _i1.SmartFake
    implements _i5.ChatPageWithRoom {
  _FakeChatPageWithRoom_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeBuildContext_6 extends _i1.SmartFake implements _i4.BuildContext {
  _FakeBuildContext_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_7 extends _i1.SmartFake implements _i4.Widget {
  _FakeWidget_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDiagnosticsNode_8 extends _i1.SmartFake
    implements _i4.DiagnosticsNode {
  _FakeDiagnosticsNode_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({
    _i6.TextTreeConfiguration? parentConfiguration,
    _i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info,
  }) =>
      super.toString();
}

class _FakeMatrixState_9 extends _i1.SmartFake implements _i7.MatrixState {
  _FakeMatrixState_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeStatefulElement_10 extends _i1.SmartFake
    implements _i4.StatefulElement {
  _FakeStatefulElement_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [ChatController].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatController extends _i1.Mock implements _i5.ChatController {
  @override
  _i2.Client get matrixClient => (super.noSuchMethod(
        Invocation.getter(#matrixClient),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#matrixClient),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#matrixClient),
        ),
      ) as _i2.Client);

  @override
  set matrixClient(_i2.Client? _matrixClient) => super.noSuchMethod(
        Invocation.setter(
          #matrixClient,
          _matrixClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set timeline(_i2.Timeline? _timeline) => super.noSuchMethod(
        Invocation.setter(
          #timeline,
          _timeline,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set readMarkerEventId(String? _readMarkerEventId) => super.noSuchMethod(
        Invocation.setter(
          #readMarkerEventId,
          _readMarkerEventId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.AutoScrollController get scrollController => (super.noSuchMethod(
        Invocation.getter(#scrollController),
        returnValue: _FakeAutoScrollController_1(
          this,
          Invocation.getter(#scrollController),
        ),
        returnValueForMissingStub: _FakeAutoScrollController_1(
          this,
          Invocation.getter(#scrollController),
        ),
      ) as _i3.AutoScrollController);

  @override
  _i4.FocusNode get inputFocus => (super.noSuchMethod(
        Invocation.getter(#inputFocus),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#inputFocus),
        ),
        returnValueForMissingStub: _FakeFocusNode_2(
          this,
          Invocation.getter(#inputFocus),
        ),
      ) as _i4.FocusNode);

  @override
  set inputFocus(_i4.FocusNode? _inputFocus) => super.noSuchMethod(
        Invocation.setter(
          #inputFocus,
          _inputFocus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set typingCoolDown(_i8.Timer? _typingCoolDown) => super.noSuchMethod(
        Invocation.setter(
          #typingCoolDown,
          _typingCoolDown,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set typingTimeout(_i8.Timer? _typingTimeout) => super.noSuchMethod(
        Invocation.setter(
          #typingTimeout,
          _typingTimeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get currentlyTyping => (super.noSuchMethod(
        Invocation.getter(#currentlyTyping),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set currentlyTyping(bool? _currentlyTyping) => super.noSuchMethod(
        Invocation.setter(
          #currentlyTyping,
          _currentlyTyping,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get dragging => (super.noSuchMethod(
        Invocation.getter(#dragging),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set dragging(bool? _dragging) => super.noSuchMethod(
        Invocation.setter(
          #dragging,
          _dragging,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i2.Event> get selectedEvents => (super.noSuchMethod(
        Invocation.getter(#selectedEvents),
        returnValue: <_i2.Event>[],
        returnValueForMissingStub: <_i2.Event>[],
      ) as List<_i2.Event>);

  @override
  set selectedEvents(List<_i2.Event>? _selectedEvents) => super.noSuchMethod(
        Invocation.setter(
          #selectedEvents,
          _selectedEvents,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Set<String> get unfolded => (super.noSuchMethod(
        Invocation.getter(#unfolded),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);

  @override
  set replyEvent(_i2.Event? _replyEvent) => super.noSuchMethod(
        Invocation.setter(
          #replyEvent,
          _replyEvent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set editEvent(_i2.Event? _editEvent) => super.noSuchMethod(
        Invocation.setter(
          #editEvent,
          _editEvent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get showScrollDownButton => (super.noSuchMethod(
        Invocation.getter(#showScrollDownButton),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set showScrollDownButton(bool? _showScrollDownButton) => super.noSuchMethod(
        Invocation.setter(
          #showScrollDownButton,
          _showScrollDownButton,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get inputText => (super.noSuchMethod(
        Invocation.getter(#inputText),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#inputText),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#inputText),
        ),
      ) as String);

  @override
  set inputText(String? _inputText) => super.noSuchMethod(
        Invocation.setter(
          #inputText,
          _inputText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get pendingText => (super.noSuchMethod(
        Invocation.getter(#pendingText),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#pendingText),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#pendingText),
        ),
      ) as String);

  @override
  set pendingText(String? _pendingText) => super.noSuchMethod(
        Invocation.setter(
          #pendingText,
          _pendingText,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get showEmojiPicker => (super.noSuchMethod(
        Invocation.getter(#showEmojiPicker),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set showEmojiPicker(bool? _showEmojiPicker) => super.noSuchMethod(
        Invocation.setter(
          #showEmojiPicker,
          _showEmojiPicker,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.EmojiPickerType get emojiPickerType => (super.noSuchMethod(
        Invocation.getter(#emojiPickerType),
        returnValue: _i5.EmojiPickerType.reaction,
        returnValueForMissingStub: _i5.EmojiPickerType.reaction,
      ) as _i5.EmojiPickerType);

  @override
  set emojiPickerType(_i5.EmojiPickerType? _emojiPickerType) =>
      super.noSuchMethod(
        Invocation.setter(
          #emojiPickerType,
          _emojiPickerType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set loadTimelineFuture(_i8.Future<void>? _loadTimelineFuture) =>
      super.noSuchMethod(
        Invocation.setter(
          #loadTimelineFuture,
          _loadTimelineFuture,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.TextEditingController get sendController => (super.noSuchMethod(
        Invocation.getter(#sendController),
        returnValue: _FakeTextEditingController_3(
          this,
          Invocation.getter(#sendController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_3(
          this,
          Invocation.getter(#sendController),
        ),
      ) as _i4.TextEditingController);

  @override
  set sendController(_i4.TextEditingController? _sendController) =>
      super.noSuchMethod(
        Invocation.setter(
          #sendController,
          _sendController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Room get room => (super.noSuchMethod(
        Invocation.getter(#room),
        returnValue: _FakeRoom_4(
          this,
          Invocation.getter(#room),
        ),
        returnValueForMissingStub: _FakeRoom_4(
          this,
          Invocation.getter(#room),
        ),
      ) as _i2.Room);

  @override
  Map<dynamic, dynamic> get timCaseReferenceContent => (super.noSuchMethod(
        Invocation.getter(#timCaseReferenceContent),
        returnValue: <dynamic, dynamic>{},
        returnValueForMissingStub: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  String get roomId => (super.noSuchMethod(
        Invocation.getter(#roomId),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#roomId),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#roomId),
        ),
      ) as String);

  @override
  bool get canSaveSelectedEvent => (super.noSuchMethod(
        Invocation.getter(#canSaveSelectedEvent),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get selectMode => (super.noSuchMethod(
        Invocation.getter(#selectMode),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<_i2.Client?> get currentRoomBundle => (super.noSuchMethod(
        Invocation.getter(#currentRoomBundle),
        returnValue: <_i2.Client?>[],
        returnValueForMissingStub: <_i2.Client?>[],
      ) as List<_i2.Client?>);

  @override
  bool get canRedactSelectedEvents => (super.noSuchMethod(
        Invocation.getter(#canRedactSelectedEvents),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isArchived => (super.noSuchMethod(
        Invocation.getter(#isArchived),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.ChatPageWithRoom get widget => (super.noSuchMethod(
        Invocation.getter(#widget),
        returnValue: _FakeChatPageWithRoom_5(
          this,
          Invocation.getter(#widget),
        ),
        returnValueForMissingStub: _FakeChatPageWithRoom_5(
          this,
          Invocation.getter(#widget),
        ),
      ) as _i5.ChatPageWithRoom);

  @override
  _i4.BuildContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeBuildContext_6(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeBuildContext_6(
          this,
          Invocation.getter(#context),
        ),
      ) as _i4.BuildContext);

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void onDragEntered(dynamic _) => super.noSuchMethod(
        Invocation.method(
          #onDragEntered,
          [_],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDragExited(dynamic _) => super.noSuchMethod(
        Invocation.method(
          #onDragExited,
          [_],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDragDone(_i10.DropDoneDetails? details) => super.noSuchMethod(
        Invocation.method(
          #onDragDone,
          [details],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void saveSelectedEvent(dynamic context) => super.noSuchMethod(
        Invocation.method(
          #saveSelectedEvent,
          [context],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void recreateChat() => super.noSuchMethod(
        Invocation.method(
          #recreateChat,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void leaveChat() => super.noSuchMethod(
        Invocation.method(
          #leaveChat,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void requestHistory() => super.noSuchMethod(
        Invocation.method(
          #requestHistory,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void requestFuture() => super.noSuchMethod(
        Invocation.method(
          #requestFuture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void initState() => super.noSuchMethod(
        Invocation.method(
          #initState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateView() => super.noSuchMethod(
        Invocation.method(
          #updateView,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setReadMarker({String? eventId}) => super.noSuchMethod(
        Invocation.method(
          #setReadMarker,
          [],
          {#eventId: eventId},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMatrixClient(_i2.Client? c) => super.noSuchMethod(
        Invocation.method(
          #setMatrixClient,
          [c],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setActiveClient(_i2.Client? c) => super.noSuchMethod(
        Invocation.method(
          #setActiveClient,
          [c],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> send() => (super.noSuchMethod(
        Invocation.method(
          #send,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void sendFileTestAction() => super.noSuchMethod(
        Invocation.method(
          #sendFileTestAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendFileAction() => super.noSuchMethod(
        Invocation.method(
          #sendFileAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendImageAction() => super.noSuchMethod(
        Invocation.method(
          #sendImageAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openCameraAction() => super.noSuchMethod(
        Invocation.method(
          #openCameraAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openVideoCameraAction() => super.noSuchMethod(
        Invocation.method(
          #openVideoCameraAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendStickerAction() => super.noSuchMethod(
        Invocation.method(
          #sendStickerAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void voiceMessageAction() => super.noSuchMethod(
        Invocation.method(
          #voiceMessageAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emojiPickerAction() => super.noSuchMethod(
        Invocation.method(
          #emojiPickerAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendLocationAction() => super.noSuchMethod(
        Invocation.method(
          #sendLocationAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void copyEventsAction() => super.noSuchMethod(
        Invocation.method(
          #copyEventsAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reportEventAction() => super.noSuchMethod(
        Invocation.method(
          #reportEventAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void redactEventsAction() => super.noSuchMethod(
        Invocation.method(
          #redactEventsAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void forwardEventsAction() => super.noSuchMethod(
        Invocation.method(
          #forwardEventsAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendAgainAction() => super.noSuchMethod(
        Invocation.method(
          #sendAgainAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void replyAction({_i2.Event? replyTo}) => super.noSuchMethod(
        Invocation.method(
          #replyAction,
          [],
          {#replyTo: replyTo},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void editAction() => super.noSuchMethod(
        Invocation.method(
          #editAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scrollToEventId(String? eventId) => super.noSuchMethod(
        Invocation.method(
          #scrollToEventId,
          [eventId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void scrollDown() => super.noSuchMethod(
        Invocation.method(
          #scrollDown,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEmojiSelected(
    dynamic _,
    _i11.Emoji? emoji,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onEmojiSelected,
          [
            _,
            emoji,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void senEmojiReaction(_i11.Emoji? emoji) => super.noSuchMethod(
        Invocation.method(
          #senEmojiReaction,
          [emoji],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void forgetRoom() => super.noSuchMethod(
        Invocation.method(
          #forgetRoom,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void typeEmoji(_i11.Emoji? emoji) => super.noSuchMethod(
        Invocation.method(
          #typeEmoji,
          [emoji],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emojiPickerBackspace() => super.noSuchMethod(
        Invocation.method(
          #emojiPickerBackspace,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pickEmojiReactionAction(Iterable<_i2.Event>? allReactionEvents) =>
      super.noSuchMethod(
        Invocation.method(
          #pickEmojiReactionAction,
          [allReactionEvents],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void sendEmojiAction(String? emoji) => super.noSuchMethod(
        Invocation.method(
          #sendEmojiAction,
          [emoji],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearSelectedEvents() => super.noSuchMethod(
        Invocation.method(
          #clearSelectedEvents,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearSingleSelectedEvent() => super.noSuchMethod(
        Invocation.method(
          #clearSingleSelectedEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goToNewRoomAction() => super.noSuchMethod(
        Invocation.method(
          #goToNewRoomAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onSelectMessage(_i2.Event? event) => super.noSuchMethod(
        Invocation.method(
          #onSelectMessage,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int? findChildIndexCallback(
    _i4.Key? key,
    Map<String, int>? thisEventsKeyMap,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findChildIndexCallback,
          [
            key,
            thisEventsKeyMap,
          ],
        ),
        returnValueForMissingStub: null,
      ) as int?);

  @override
  void onInputBarSubmitted(dynamic _) => super.noSuchMethod(
        Invocation.method(
          #onInputBarSubmitted,
          [_],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onAddPopupMenuButtonSelected(String? choice) => super.noSuchMethod(
        Invocation.method(
          #onAddPopupMenuButtonSelected,
          [choice],
        ),
        returnValueForMissingStub: null,
      );

  @override
  dynamic unpinEvent(String? eventId) => super.noSuchMethod(
        Invocation.method(
          #unpinEvent,
          [eventId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pinEvent() => super.noSuchMethod(
        Invocation.method(
          #pinEvent,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInputBarChanged(String? text) => super.noSuchMethod(
        Invocation.method(
          #onInputBarChanged,
          [text],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showEditHistory(_i2.Event? event) => super.noSuchMethod(
        Invocation.method(
          #showEditHistory,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showEventInfo([_i2.Event? event]) => super.noSuchMethod(
        Invocation.method(
          #showEventInfo,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onPhoneButtonTap() => super.noSuchMethod(
        Invocation.method(
          #onPhoneButtonTap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cancelReplyEventAction() => super.noSuchMethod(
        Invocation.method(
          #cancelReplyEventAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void cancelEditEventAction() => super.noSuchMethod(
        Invocation.method(
          #cancelEditEventAction,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Widget build(_i4.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #build,
          [context],
        ),
        returnValue: _FakeWidget_7(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
        returnValueForMissingStub: _FakeWidget_7(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
      ) as _i4.Widget);

  @override
  void didUpdateWidget(_i5.ChatPageWithRoom? oldWidget) => super.noSuchMethod(
        Invocation.method(
          #didUpdateWidget,
          [oldWidget],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reassemble() => super.noSuchMethod(
        Invocation.method(
          #reassemble,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i12.VoidCallback? fn) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [fn],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deactivate() => super.noSuchMethod(
        Invocation.method(
          #deactivate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void activate() => super.noSuchMethod(
        Invocation.method(
          #activate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeDependencies() => super.noSuchMethod(
        Invocation.method(
          #didChangeDependencies,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugFillProperties(_i13.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  _i4.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i6.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_8(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_8(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i4.DiagnosticsNode);
}

/// A class which mocks [Matrix].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatrix extends _i1.Mock implements _i7.Matrix {
  @override
  _i4.BuildContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeBuildContext_6(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeBuildContext_6(
          this,
          Invocation.getter(#context),
        ),
      ) as _i4.BuildContext);

  @override
  List<_i2.Client> get clients => (super.noSuchMethod(
        Invocation.getter(#clients),
        returnValue: <_i2.Client>[],
        returnValueForMissingStub: <_i2.Client>[],
      ) as List<_i2.Client>);

  @override
  _i7.MatrixState createState() => (super.noSuchMethod(
        Invocation.method(
          #createState,
          [],
        ),
        returnValue: _FakeMatrixState_9(
          this,
          Invocation.method(
            #createState,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeMatrixState_9(
          this,
          Invocation.method(
            #createState,
            [],
          ),
        ),
      ) as _i7.MatrixState);

  @override
  _i4.StatefulElement createElement() => (super.noSuchMethod(
        Invocation.method(
          #createElement,
          [],
        ),
        returnValue: _FakeStatefulElement_10(
          this,
          Invocation.method(
            #createElement,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeStatefulElement_10(
          this,
          Invocation.method(
            #createElement,
            [],
          ),
        ),
      ) as _i4.StatefulElement);

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  void debugFillProperties(_i13.DiagnosticPropertiesBuilder? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toStringShallow({
    String? joiner = r', ',
    _i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringShallow,
          [],
          {
            #joiner: joiner,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShallow,
            [],
            {
              #joiner: joiner,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  String toStringDeep({
    String? prefixLineOne = r'',
    String? prefixOtherLines,
    _i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.debug,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toStringDeep,
          [],
          {
            #prefixLineOne: prefixLineOne,
            #prefixOtherLines: prefixOtherLines,
            #minLevel: minLevel,
          },
        ),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
            },
          ),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.method(
            #toStringDeep,
            [],
            {
              #prefixLineOne: prefixLineOne,
              #prefixOtherLines: prefixOtherLines,
              #minLevel: minLevel,
            },
          ),
        ),
      ) as String);

  @override
  _i4.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i6.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_8(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_8(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i4.DiagnosticsNode);

  @override
  List<_i4.DiagnosticsNode> debugDescribeChildren() => (super.noSuchMethod(
        Invocation.method(
          #debugDescribeChildren,
          [],
        ),
        returnValue: <_i4.DiagnosticsNode>[],
        returnValueForMissingStub: <_i4.DiagnosticsNode>[],
      ) as List<_i4.DiagnosticsNode>);

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}
