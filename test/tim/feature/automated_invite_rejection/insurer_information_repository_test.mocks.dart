// Mocks generated by Mockito 5.4.4 from annotations
// in fluffychat/test/tim/feature/automated_invite_rejection/insurer_information_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:fluffychat/tim/shared/matrix/tim_matrix_client.dart' as _i8;
import 'package:fluffychat/tim/shared/tim_auth_repository.dart' as _i6;
import 'package:fluffychat/tim/shared/tim_auth_token.dart' as _i2;
import 'package:http/http.dart' as _i3;
import 'package:matrix/matrix.dart' as _i5;
import 'package:matrix/src/utils/cached_stream_controller.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTimAuthToken_0 extends _i1.SmartFake implements _i2.TimAuthToken {
  _FakeTimAuthToken_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_1 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_2 extends _i1.SmartFake implements Uri {
  _FakeUri_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCachedStreamController_3<T> extends _i1.SmartFake
    implements _i4.CachedStreamController<T> {
  _FakeCachedStreamController_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetRoomEventsResponse_4 extends _i1.SmartFake
    implements _i5.GetRoomEventsResponse {
  _FakeGetRoomEventsResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimAuthRepository extends _i1.Mock implements _i6.TimAuthRepository {
  MockTimAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.TimAuthToken> getOpenIdToken() => (super.noSuchMethod(
        Invocation.method(
          #getOpenIdToken,
          [],
        ),
        returnValue: _i7.Future<_i2.TimAuthToken>.value(_FakeTimAuthToken_0(
          this,
          Invocation.method(
            #getOpenIdToken,
            [],
          ),
        )),
      ) as _i7.Future<_i2.TimAuthToken>);

  @override
  _i7.Future<_i2.TimAuthToken> getFhirToken() => (super.noSuchMethod(
        Invocation.method(
          #getFhirToken,
          [],
        ),
        returnValue: _i7.Future<_i2.TimAuthToken>.value(_FakeTimAuthToken_0(
          this,
          Invocation.method(
            #getFhirToken,
            [],
          ),
        )),
      ) as _i7.Future<_i2.TimAuthToken>);

  @override
  _i7.Future<_i2.TimAuthToken> getHbaToken() => (super.noSuchMethod(
        Invocation.method(
          #getHbaToken,
          [],
        ),
        returnValue: _i7.Future<_i2.TimAuthToken>.value(_FakeTimAuthToken_0(
          this,
          Invocation.method(
            #getHbaToken,
            [],
          ),
        )),
      ) as _i7.Future<_i2.TimAuthToken>);

  @override
  _i7.Future<_i2.TimAuthToken> getHbaTokenFromUrl(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHbaTokenFromUrl,
          [url],
        ),
        returnValue: _i7.Future<_i2.TimAuthToken>.value(_FakeTimAuthToken_0(
          this,
          Invocation.method(
            #getHbaTokenFromUrl,
            [url],
          ),
        )),
      ) as _i7.Future<_i2.TimAuthToken>);

  @override
  _i7.Future<_i3.Response> get(
    Uri? uri, {
    required Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [uri],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #get,
            [uri],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i3.Response>);

  @override
  _i7.Future<_i3.Response> post(
    Uri? uri, {
    required Map<String, String>? headers,
    String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #post,
            [uri],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
      ) as _i7.Future<_i3.Response>);

  @override
  _i7.Future<_i3.Response> put(
    Uri? uri, {
    required Map<String, String>? headers,
    String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [uri],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #put,
            [uri],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
      ) as _i7.Future<_i3.Response>);

  @override
  _i7.Future<_i3.Response> delete(
    Uri? uri, {
    required Map<String, String>? headers,
    String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uri],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_1(
          this,
          Invocation.method(
            #delete,
            [uri],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
      ) as _i7.Future<_i3.Response>);
}

/// A class which mocks [TimMatrixClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimMatrixClient extends _i1.Mock implements _i8.TimMatrixClient {
  MockTimMatrixClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get userID => (super.noSuchMethod(
        Invocation.getter(#userID),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#userID),
        ),
      ) as String);

  @override
  String get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#accessToken),
        ),
      ) as String);

  @override
  Uri get homeserver => (super.noSuchMethod(
        Invocation.getter(#homeserver),
        returnValue: _FakeUri_2(
          this,
          Invocation.getter(#homeserver),
        ),
      ) as Uri);

  @override
  _i4.CachedStreamController<_i5.EventUpdate> get onEventUpdate =>
      (super.noSuchMethod(
        Invocation.getter(#onEventUpdate),
        returnValue: _FakeCachedStreamController_3<_i5.EventUpdate>(
          this,
          Invocation.getter(#onEventUpdate),
        ),
      ) as _i4.CachedStreamController<_i5.EventUpdate>);

  @override
  _i7.Future<String?> getDisplayName(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getDisplayName,
          [userId],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i5.Room? getRoomById(String? id) => (super.noSuchMethod(Invocation.method(
        #getRoomById,
        [id],
      )) as _i5.Room?);

  @override
  _i7.Future<_i5.GetRoomEventsResponse> getRoomEvents(
    String? roomId,
    _i5.Direction? dir, {
    String? from,
    String? to,
    int? limit,
    String? filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoomEvents,
          [
            roomId,
            dir,
          ],
          {
            #from: from,
            #to: to,
            #limit: limit,
            #filter: filter,
          },
        ),
        returnValue: _i7.Future<_i5.GetRoomEventsResponse>.value(
            _FakeGetRoomEventsResponse_4(
          this,
          Invocation.method(
            #getRoomEvents,
            [
              roomId,
              dir,
            ],
            {
              #from: from,
              #to: to,
              #limit: limit,
              #filter: filter,
            },
          ),
        )),
      ) as _i7.Future<_i5.GetRoomEventsResponse>);

  @override
  _i7.Future<String> startDirectChat(
    String? mxid, {
    bool? enableEncryption,
    List<_i5.StateEvent>? initialState,
    bool? waitForSync = true,
    Map<String, dynamic>? powerLevelContentOverride,
    _i5.CreateRoomPreset? preset = _i5.CreateRoomPreset.trustedPrivateChat,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startDirectChat,
          [mxid],
          {
            #enableEncryption: enableEncryption,
            #initialState: initialState,
            #waitForSync: waitForSync,
            #powerLevelContentOverride: powerLevelContentOverride,
            #preset: preset,
          },
        ),
        returnValue: _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #startDirectChat,
            [mxid],
            {
              #enableEncryption: enableEncryption,
              #initialState: initialState,
              #waitForSync: waitForSync,
              #powerLevelContentOverride: powerLevelContentOverride,
              #preset: preset,
            },
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> startDirectChatWithCustomRoomType(
    String? mxid, {
    bool? isCaseReference = false,
    Map<String, dynamic>? creationContent,
    List<_i5.Invite3pid>? invite3pid,
    String? name,
    String? roomAliasName,
    String? roomVersion,
    String? topic,
    _i5.Visibility? visibility,
    bool? enableEncryption,
    List<_i5.StateEvent>? initialState,
    bool? waitForSync = true,
    Map<String, dynamic>? powerLevelContentOverride,
    _i5.CreateRoomPreset? preset = _i5.CreateRoomPreset.trustedPrivateChat,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startDirectChatWithCustomRoomType,
          [mxid],
          {
            #isCaseReference: isCaseReference,
            #creationContent: creationContent,
            #invite3pid: invite3pid,
            #name: name,
            #roomAliasName: roomAliasName,
            #roomVersion: roomVersion,
            #topic: topic,
            #visibility: visibility,
            #enableEncryption: enableEncryption,
            #initialState: initialState,
            #waitForSync: waitForSync,
            #powerLevelContentOverride: powerLevelContentOverride,
            #preset: preset,
          },
        ),
        returnValue: _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #startDirectChatWithCustomRoomType,
            [mxid],
            {
              #isCaseReference: isCaseReference,
              #creationContent: creationContent,
              #invite3pid: invite3pid,
              #name: name,
              #roomAliasName: roomAliasName,
              #roomVersion: roomVersion,
              #topic: topic,
              #visibility: visibility,
              #enableEncryption: enableEncryption,
              #initialState: initialState,
              #waitForSync: waitForSync,
              #powerLevelContentOverride: powerLevelContentOverride,
              #preset: preset,
            },
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> createGroupChatWithCustomRoomType({
    bool? isCaseReference = false,
    String? name,
    bool? enableEncryption,
    List<String>? invite,
    _i5.CreateRoomPreset? preset = _i5.CreateRoomPreset.privateChat,
    List<_i5.StateEvent>? initialState,
    _i5.Visibility? visibility,
    bool? waitForSync = true,
    bool? groupCall = false,
    Map<String, dynamic>? powerLevelContentOverride,
    Map<String, dynamic>? creationContent,
    List<_i5.Invite3pid>? invite3pid,
    bool? isDirect = false,
    String? roomAliasName,
    String? roomVersion,
    String? topic,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGroupChatWithCustomRoomType,
          [],
          {
            #isCaseReference: isCaseReference,
            #name: name,
            #enableEncryption: enableEncryption,
            #invite: invite,
            #preset: preset,
            #initialState: initialState,
            #visibility: visibility,
            #waitForSync: waitForSync,
            #groupCall: groupCall,
            #powerLevelContentOverride: powerLevelContentOverride,
            #creationContent: creationContent,
            #invite3pid: invite3pid,
            #isDirect: isDirect,
            #roomAliasName: roomAliasName,
            #roomVersion: roomVersion,
            #topic: topic,
          },
        ),
        returnValue: _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #createGroupChatWithCustomRoomType,
            [],
            {
              #isCaseReference: isCaseReference,
              #name: name,
              #enableEncryption: enableEncryption,
              #invite: invite,
              #preset: preset,
              #initialState: initialState,
              #visibility: visibility,
              #waitForSync: waitForSync,
              #groupCall: groupCall,
              #powerLevelContentOverride: powerLevelContentOverride,
              #creationContent: creationContent,
              #invite3pid: invite3pid,
              #isDirect: isDirect,
              #roomAliasName: roomAliasName,
              #roomVersion: roomVersion,
              #topic: topic,
            },
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i4.CachedStreamController<_i5.BasicEvent> onAccountDataChange() =>
      (super.noSuchMethod(
        Invocation.method(
          #onAccountDataChange,
          [],
        ),
        returnValue: _FakeCachedStreamController_3<_i5.BasicEvent>(
          this,
          Invocation.method(
            #onAccountDataChange,
            [],
          ),
        ),
      ) as _i4.CachedStreamController<_i5.BasicEvent>);

  @override
  _i7.Future<void> setAccountData(
    String? userId,
    String? type,
    Map<String, dynamic>? content,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAccountData,
          [
            userId,
            type,
            content,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<Map<String, dynamic>> getAccountData(
    String? userId,
    String? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccountData,
          [
            userId,
            type,
          ],
        ),
        returnValue:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i7.Future<Map<String, dynamic>>);

  @override
  void leaveRoom(
    String? roomId, {
    String? reason,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #leaveRoom,
          [roomId],
          {#reason: reason},
        ),
        returnValueForMissingStub: null,
      );
}
