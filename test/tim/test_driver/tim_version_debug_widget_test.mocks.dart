// Mocks generated by Mockito 5.4.2 from annotations
// in fluffychat/test/tim/test_driver/tim_version_debug_widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fluffychat/tim/feature/tim_version/tim_version.dart' as _i5;
import 'package:fluffychat/tim/feature/tim_version/tim_version_repository.dart'
    as _i2;
import 'package:fluffychat/tim/feature/tim_version/tim_version_service.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTimVersionRepository_0 extends _i1.SmartFake
    implements _i2.TimVersionRepository {
  _FakeTimVersionRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimVersionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimVersionService extends _i1.Mock implements _i3.TimVersionService {
  @override
  _i2.TimVersionRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTimVersionRepository_0(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeTimVersionRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TimVersionRepository);
  @override
  _i4.Future<void> set(_i5.TimVersion? version) => (super.noSuchMethod(
        Invocation.method(
          #set,
          [version],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i5.TimVersion> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i4.Future<_i5.TimVersion>.value(_i5.TimVersion.classic),
        returnValueForMissingStub:
            _i4.Future<_i5.TimVersion>.value(_i5.TimVersion.classic),
      ) as _i4.Future<_i5.TimVersion>);
  @override
  _i4.Future<bool> versionFeaturesClientSideInviteRejection() =>
      (super.noSuchMethod(
        Invocation.method(
          #versionFeaturesClientSideInviteRejection,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
